#!/usr/bin/perl
##-d:DProf

#------------------------------------------------------------------------------#
# File:        mspbo
#
# Description: PBO model for the MaxSAT problem.
#
# Author:      Joao Marques-Silva.
#
# Created:     24 Sep 2007.
#
# Revision:    $Id$.
#------------------------------------------------------------------------------#

push @INC, \&resolve_inc;

use strict;

use Data::Dumper;

use POSIX;

use Getopt::Std;

require UTILS;  # Must use require, to get INC updated
import UTILS;

require IDGEN;
import IDGEN qw( &num_id &gen_id &set_id );

require CLUTILS;
import CLUTILS;

require CLSET;
import CLSET;

my $progname = &UTILS::get_progname();

my $inpfile = shift @ARGV;

# Load CNF formula
my $clset = CLSET::new();    # default clause set
$clset->parse($inpfile);
my $nvars = $clset->numvars;
my $ncls = $clset->numcls;

my $baseid = $nvars+1;
my $numids = $ncls;
&print_cost_function($baseid, $ncls);

my $clauses = $clset->clauses;
my $bvid = $baseid;
foreach my $cl (@{$clauses}) {
    &print_clause($bvid, $cl);
    ++$bvid;
    if ($bvid > $baseid+$numids) { die "More clauses than expected??\n"; }
    #print "CLAUSE: $cl\n"; exit;

}

1;

#------------------------------------------------------------------------------#
# Write PBO model
#------------------------------------------------------------------------------#

sub print_cost_function() {
    my ($baseid, $numids) = @_;
    print "min:";
    for (my $i=$baseid; $i<$baseid+$numids; ++$i) {
	print " 1 * x$i";
    }
    print " ;\n";
}

sub print_clause() {
    my ($bvid, $cl) = @_;
    my $tval = 1;
    my $clits = &CLUTILS::cllits($cl);
    print " 1 * x$bvid";
    foreach my $lit (@{$clits}) {
	my $plit = $lit;
	if ($lit < 0) {
	    $tval--;
	    $lit = -$lit;
	    print " -1 * x$lit";
	} else {
	    print " 1 * x$lit";
	}
    }
    print " >= $tval ;\n";
}


#------------------------------------------------------------------------------#
# Auxiliary functions
#------------------------------------------------------------------------------#

sub resolve_inc() {    # Copy from template kept in UTILS package
    my ($cref, $pmname) = @_;
    my @progname_toks = split(/\//, $0);
    pop @progname_toks;
    my $progpath = join('/', @progname_toks);
    my $fullname = $progpath . '/' . $pmname;
    my $fh;
    open($fh, "<$fullname") || die "non-existing $pmname\n";
    return $fh;
}

#------------------------------------------------------------------------------#
